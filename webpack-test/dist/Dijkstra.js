var Dijkstrajs;(()=>{var e={946:(e,t,r)=>{const s=r(662),o=r(541),n=r(694),i=r(226);e.exports=class{constructor(e){e instanceof Map?(i(e),this.graph=e):this.graph=e?n(e):new Map}addNode(e,t){let r;return t instanceof Map?(i(t),r=t):r=n(t),this.graph.set(e,r),this}addVertex(e,t){return this.addNode(e,t)}removeNode(e){return this.graph=o(this.graph,e),this}path(e,t,r={}){if(!this.graph.size)return r.cost?{path:null,cost:0}:null;const o=new Set,n=new s,i=new Map;let a=[],u=0,h=[];if(r.avoid&&(h=[].concat(r.avoid)),h.includes(e))throw new Error(`Starting node (${e}) cannot be avoided`);if(h.includes(t))throw new Error(`Ending node (${t}) cannot be avoided`);for(n.set(e,0);!n.isEmpty();){const e=n.next();if(e.key===t){u=e.priority;let t=e.key;for(;i.has(t);)a.push(t),t=i.get(t);break}o.add(e.key),(this.graph.get(e.key)||new Map).forEach(((t,r)=>{if(o.has(r)||h.includes(r))return null;if(!n.has(r))return i.set(r,e.key),n.set(r,e.priority+t);const s=n.get(r).priority,a=e.priority+t;return a<s?(i.set(r,e.key),n.set(r,a)):null}))}return a.length?(r.trim?a.shift():a=a.concat([e]),r.reverse||(a=a.reverse()),r.cost?{path:a,cost:u}:a):r.cost?{path:null,cost:0}:null}shortestPath(...e){return this.path(...e)}}},662:e=>{e.exports=class{constructor(){this.keys=new Set,this.queue=[]}sort(){this.queue.sort(((e,t)=>e.priority-t.priority))}set(e,t){const r=Number(t);if(isNaN(r))throw new TypeError('"priority" must be a number');return this.keys.has(e)?this.queue.map((t=>(t.key===e&&Object.assign(t,{priority:r}),t))):(this.keys.add(e),this.queue.push({key:e,priority:r})),this.sort(),this.queue.length}next(){const e=this.queue.shift();return this.keys.delete(e.key),e}isEmpty(){return Boolean(0===this.queue.length)}has(e){return this.keys.has(e)}get(e){return this.queue.find((t=>t.key===e))}}},541:e=>{e.exports=function e(t,r){const s=new Map;for(const[o,n]of t)o!==r&&n instanceof Map?s.set(o,e(n,r)):o!==r&&s.set(o,n);return s}},694:e=>{e.exports=function e(t){const r=new Map;return Object.keys(t).forEach((s=>{const o=t[s];if(null!==o&&"object"==typeof o&&!Array.isArray(o))return r.set(s,e(o));if(!function(e){const t=Number(e);return!(isNaN(t)||t<=0)}(o))throw new Error(`Could not add node at key "${s}", make sure it's a valid node`,o);return r.set(s,Number(o))})),r}},226:e=>{e.exports=function e(t){if(!(t instanceof Map))throw new Error("Invalid graph: Expected Map instead found "+typeof t);t.forEach(((t,r)=>{if("object"==typeof t&&t instanceof Map)e(t);else if("number"!=typeof t||t<=0)throw new Error(`Values must be numbers greater than 0. Found value ${t} at ${r}`)}))}}},t={};function r(s){var o=t[s];if(void 0!==o)return o.exports;var n=t[s]={exports:{}};return e[s](n,n.exports,r),n.exports}r.d=(e,t)=>{for(var s in t)r.o(t,s)&&!r.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var s={};(()=>{"use strict";r.r(s),r.d(s,{dijkstra:()=>e});const e=r(946)})(),Dijkstrajs=s})();